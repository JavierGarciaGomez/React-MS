[{"C:\\Users\\Javier\\Desktop\\Code\\Courses\\ReactMS\\s16-forms-and-inputs\\01-starting-project\\src\\index.js":"1","C:\\Users\\Javier\\Desktop\\Code\\Courses\\ReactMS\\s16-forms-and-inputs\\01-starting-project\\src\\App.js":"2","C:\\Users\\Javier\\Desktop\\Code\\Courses\\ReactMS\\s16-forms-and-inputs\\01-starting-project\\src\\components\\SimpleInput.js":"3","C:\\Users\\Javier\\Desktop\\Code\\Courses\\ReactMS\\s16-forms-and-inputs\\01-starting-project\\src\\components\\SimpleInput199.js":"4"},{"size":142,"mtime":1616595887000,"results":"5","hashOfConfig":"6"},{"size":229,"mtime":1637939328921,"results":"7","hashOfConfig":"6"},{"size":2501,"mtime":1637508453105,"results":"8","hashOfConfig":"6"},{"size":793,"mtime":1637939446277,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"e2rhvz",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Javier\\Desktop\\Code\\Courses\\ReactMS\\s16-forms-and-inputs\\01-starting-project\\src\\index.js",[],["20","21"],"C:\\Users\\Javier\\Desktop\\Code\\Courses\\ReactMS\\s16-forms-and-inputs\\01-starting-project\\src\\App.js",["22"],"C:\\Users\\Javier\\Desktop\\Code\\Courses\\ReactMS\\s16-forms-and-inputs\\01-starting-project\\src\\components\\SimpleInput.js",["23"],"import { useEffect, useRef, useState } from \"react\";\n// 199, 200, 201, 202, 203\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef();\n  const [enteredName, setenteredName] = useState(\"\");\n  // const [enteredNameIsValid, setenteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setenteredNameTouched] = useState(false);\n  // 205\n  const [formIsValid, setformIsValid] = useState(false);\n\n  // 204\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  // 202\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  // 205\n\n  // 205\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setformIsValid(true);\n    } else {\n      setformIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  // useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"name input is valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (e) => {\n    setenteredName(e.target.value);\n    // if (e.target.value.trim() !== \"\") {\n    //   setenteredNameIsValid(true);\n    //   return;\n    // }\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    // 202\n    setenteredNameTouched(true);\n\n    // 200\n    if (!enteredNameIsValid) {\n      return;\n    }\n    // setenteredNameIsValid(true);\n    // console.log(enteredName);\n\n    // getting value from rev\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(\"getting the value from useref\", enteredValue);\n\n    setenteredName(\"\");\n    setenteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  // 203\n  const nameInputBlurHandler = (e) => {\n    setenteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    // // 200\n    // if (enteredName.trim() === \"\") {\n    //   setenteredNameIsValid(false);\n    //   return;\n    // }\n  };\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onChange={nameInputChangeHandler}\n          // ref={nameInputRef}\n          // 203\n          onBlur={nameInputBlurHandler}\n        />\n        {nameInputIsInvalid && <p>Entered name is not valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\Users\\Javier\\Desktop\\Code\\Courses\\ReactMS\\s16-forms-and-inputs\\01-starting-project\\src\\components\\SimpleInput199.js",["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":19},{"ruleId":"30","severity":1,"message":"34","line":1,"column":21,"nodeType":"32","messageId":"33","endLine":1,"endColumn":27},{"ruleId":"30","severity":1,"message":"35","line":3,"column":10,"nodeType":"32","messageId":"33","endLine":3,"endColumn":19},{"ruleId":"30","severity":1,"message":"34","line":3,"column":21,"nodeType":"32","messageId":"33","endLine":3,"endColumn":27},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]